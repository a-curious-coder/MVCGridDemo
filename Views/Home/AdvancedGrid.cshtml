@model IEnumerable<MVCGridProject.Models.Product>
@using NonFactors.Mvc.Grid;

@{
    ViewData["Title"] = "Advanced Grid";
}

<h1 class="text-3xl font-bold mb-6">@ViewData["Title"]</h1>

<div class="bg-white dark:bg-gray-800 shadow-md rounded-lg p-6 mb-8">
    <h2 class="text-xl font-semibold mb-2">Description</h2>
    <p class="text-gray-600 dark:text-gray-300">
        This advanced grid showcases more complex features of Nonfactors MVCGrid, including:
    </p>
    <ul class="list-disc list-inside mt-2 text-gray-600 dark:text-gray-300">
        <li>Custom column formatting</li>
        <li>Advanced pagination options</li>
        <li>More detailed product information</li>
        <li>Formatted date and boolean values</li>
    </ul>
</div>

@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.Id).Titled("ID");
        columns.Add(model => model.Name).Titled("Name");
        columns.Add(model => model.Category).Titled("Category");
        columns.Add(model => model.Price).Titled("Price").Formatted("{0:C}");
        columns.Add(model => model.Stock).Titled("Stock");
        columns.Add(model => model.CreatedDate).Titled("Created Date").Formatted("{0:d}");
        columns.Add(model => model.IsAvailable).Titled("Available").Formatted("{0}");
    })
    .Using(GridFilterMode.Header)
    .Empty("No data found")
    .Filterable()
    .Sortable()
    .Pageable(pager =>
    {
        pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 10, "10" }, { 20, "20" }, { 50, "50" } };
        pager.ShowPageSizes = true;
        pager.PagesToDisplay = 5;
        pager.CurrentPage = 1;
        pager.RowsPerPage = 5;
    })
)

@section Scripts {
    <script src="~/js/mvc-grid/mvc-grid.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            new MvcGrid(document.querySelector(".mvc-grid"));
        });
    </script>
}